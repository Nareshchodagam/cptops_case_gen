
-Copy remote scripts to the target hosts
release_runner.pl -forced_host v_HOSTS -force_update_bootstrap -c sudo_cmd -m "ls" -threads -auto2

-Validate the host needs to be patched 
release_runner.pl -forced_host v_HOSTS -c sudo_cmd -m "./remote_transfer/validate_linux_patchset.py -c current -f valid_versions.json" -threads -auto2

- Set the boot device to HDD
release_runner.pl -forced_host v_HOSTS -c sudo_cmd -m "./remote_transfer/manage_bootdevice.py -s -d HDD" -threads -auto2 

-disable monitor once you have manually checked current state 
Exec: /opt/rh/python27/root/usr/bin/python2.7 ~/nagios_monitor.py -H v_HOSTS -c disable

- Stop the running application, splunk
release_runner.pl -invdb_mode -superpod v_SUPERPOD -cluster v_CLUSTER -product mq-broker,sfdc-splunk-forwarder -host v_HOSTS -c stop_server -auto2

- Execute the update script
release_runner.pl -forced_host v_HOSTS -c sudo_cmd -m "./remote_transfer/system_update.sh -p" -threads -auto2

- Reboot the host
release_runner.pl -forced_host v_HOSTS -c sudo_cmd -m "reboot" -threads -auto2

- Check the host is online
Exec: ~/check_reconnect.py -H v_HOSTS

-Validate that the hosts have been patched and are running the correct version
release_runner.pl -forced_host v_HOSTS -c sudo_cmd -m "./remote_transfer/validate_linux_patchset.py -c current -f valid_versions.json -u" -threads -auto2

- Start the application
release_runner.pl -invdb_mode -superpod v_SUPERPOD -cluster v_CLUSTER -product mq-broker,sfdc-splunk-forwarder -host v_HOSTS -c start_server -auto2

-once you have checked monitoring enable monitoring
Exec: /opt/rh/python27/root/usr/bin/python2.7 ~/nagios_monitor.py -H v_HOSTS -c enable

- Patchset completed comment
Exec: echo "host v_HOSTS systems patching completed"

