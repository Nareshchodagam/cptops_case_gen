- To verify if site is PROD
Exec_with_creds: /opt/cpt/bin/check_prod.py -i v_CLUSTER -l primary

- Copy remote scripts to the target hosts
release_runner.pl -forced_host v_HOSTS -force_update_bootstrap -c sudo_cmd -m "ls" -threads -auto2 -property "sudo_cmd_line_trunk_fix=1"

- Set the boot device to PXE
release_runner.pl -forced_host v_HOSTS -c sudo_cmd -m "./remote_transfer/manage_bootdevice.py -s -d PXE" -threads -auto2 -property "sudo_cmd_line_trunk_fix=1"

- get version numbers for apps
release_runner.pl -invdb_mode -superpod v_SUPERPOD -cluster v_CLUSTER -product v_PRODUCT_RRCMD -c versioncheck -threads -auto2 -host v_HOST > ~/v_CLUSTER_version_output.txt

- Extract app versions from output data.
Exec: /opt/cpt/bin/get_versions.py -f ~/v_CLUSTER_version_output.txt -o ~/v_CLUSTER_manifests.txt --versions

Exec: cat ~/v_CLUSTER_manifests.txt

- Ensure rest of the cluster is 80% available
release_runner.pl -invdb_mode -superpod v_SUPERPOD -cluster v_CLUSTER -device_role app -product sfdc-base -c ensure_availability -min_host_percent 80 -exclude_host v_HOSTS -ping_validation_verify_lb -threads -auto2

- Disable nagios monitoring
Exec_with_creds: /opt/cpt/cptops_logicalhost_alerts.py -a enable -H v_HOSTS

- Stop the Agent application
release_runner.pl -invdb_mode -superpod v_SUPERPOD -cluster v_CLUSTER -product mandm-agent -host v_HOSTS -c stop_server -property pingcheck_max_tries=600,pingcheck_poll_interval_secs=3,uptime_limit=30 -threads -auto2

- Stop the coreApp application
release_runner.pl -invdb_mode -superpod v_SUPERPOD -cluster v_CLUSTER -product sfdc-base -host v_HOSTS -c stop_server -property pingcheck_max_tries=600,pingcheck_poll_interval_secs=3,uptime_limit=30 -stopall -ignored_process_names 'perl' -threads -auto2

v_INCLUDE

- Copy remote scripts to the target hosts
release_runner.pl -forced_host v_HOSTS -force_update_bootstrap -c sudo_cmd -m "ls" -threads -auto2 -property "sudo_cmd_line_trunk_fix=1"

- Validate that the hosts have been patched and are running the correct version
release_runner.pl -forced_host v_HOSTS -c sudo_cmd -m "./remote_transfer/orb-check.py -a v_BUNDLE" -threads -auto2 -property "sudo_cmd_line_trunk_fix=1"

- Deploy apps
release_runner.pl -invdb_mode -dc v_DATACENTER -superpod v_SUPERPOD -cluster v_CLUSTER -host v_HOSTS -c deploy  -ping_validation -min_host_percent 33 -property pingcheck_max_tries=700 -threads  -no_db_data_init  -auto2 -versions `cat ~/v_CLUSTER_manifests.txt`

- Validate haproxy is started
release_runner.pl -forced_host v_HOSTS -c sudo_cmd -m "./remote_transfer/manage_service.py -n haproxy -a" -threads -auto2 -property "sudo_cmd_line_trunk_fix=1"

- Start the CoreApp application
release_runner.pl -invdb_mode -superpod v_SUPERPOD -cluster v_CLUSTER -product sfdc-base -host v_HOSTS -c start_server -property pingcheck_max_tries=600,pingcheck_poll_interval_secs=3,uptime_limit=30 -threads -auto2

- Start the Agent application
release_runner.pl -invdb_mode -superpod v_SUPERPOD -cluster v_CLUSTER -product mandm-agent -host v_HOSTS -c start_server -property pingcheck_max_tries=600,pingcheck_poll_interval_secs=3,uptime_limit=30 -threads -auto2

- Validate the application
release_runner.pl -invdb_mode -superpod v_SUPERPOD -cluster v_CLUSTER -product mandm-agent,sfdc-base -host v_HOSTS -c predefined_checks -invdb_mode -property pingcheck_max_tries=600,pingcheck_poll_interval_secs=3,uptime_limit=300 -threads -auto2

- Add patched hosts to pool
release_runner.pl -invdb_mode -superpod v_SUPERPOD -cluster v_CLUSTER -host v_HOSTS -status ACTIVE -product sfdc-base,mandm-agent -c add_to_pool -property pingcheck_max_tries=600,pingcheck_poll_interval_secs=3,uptime_limit=30 -threads -auto2

- Enable nagios monitoring
Exec_with_creds: /opt/cpt/cptops_logicalhost_alerts.py -a disable -H v_HOSTS

- Auto pause case if case status is not equal to In Progres.
Exec_with_creds: /opt/cpt/gus_case_mngr.py -c v_CASE --pause -y

