


- set your DC env
Exec: DC=v_DATACENTER


- create a local remote_transfer directory

Exec: mkdir -p ~/releaserunner/remote_transfer

- the get the update script:
Exec: cd ~/releaserunner/remote_transfer
 svn export svn://vc-v_DATACENTER/subversion/tools/dcc/update_glibc.sh

-Copy remote scripts to the target hosts

release_runner.pl -forced_host v_HOSTS -force_update_bootstrap -c sudo_cmd -m "ls" -threads -auto2

-disable monitor
release_runner.pl -invdb_mode -superpod v_SUPERPOD -cluster v_CLUSTER -product obmm -c disable_monitor -threads -standby -host v_HOSTS

- Stop the running application
release_runner.pl -invdb_mode -superpod v_SUPERPOD -cluster v_CLUSTER -product obmm -c stop_server -threads -standby -host v_HOSTS

- Execute the update script
release_runner.pl -forced_host v_HOSTS -c sudo_cmd -m "./remote_transfer/update_glibc.sh" -threads -auto2

- Reboot the host
release_runner.pl -forced_host v_HOSTS -c sudo_cmd -m "reboot" -threads -auto2

- Check the host is online
Exec: /home/paulf/check_reconnect.py -H v_HOSTS

- Verify glibc versions
release_runner.pl -forced_host v_HOSTS -c cmd -m "rpm -qa | grep glibc; rpm -qa | grep nscd" -threads -auto2

- Start the application
release_runner.pl -invdb_mode -superpod v_SUPERPOD -cluster v_CLUSTER -product obmm -c start_server -threads -standby -host v_HOSTS

- Verify service
Exec: wget http://v_HOSTS.ops.sfdc.net:8088/services/Soap/o/OutboundChecker


