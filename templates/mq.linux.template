
- copy remote transfer dir up to the target host
release_runner.pl -forced_host v_HOSTS -force_update_bootstrap -c sudo_cmd -m "ls" -threads -auto2

-Validate if host require update 
release_runner.pl -forced_host v_HOSTS -c sudo_cmd -m "./remote_transfer/validate_linux_patchset.py -c current -f ../includes/valid_versions.json" -threads -auto2

-set boot device
release_runner.pl -forced_host v_HOSTS -c sudo_cmd -m "./remote_transfer/manage_bootdevice.py -s -d HDD" -threads -auto2 

-disable monitor once you have manually checked current state 
Exec: /opt/rh/python27/root/usr/bin/python2.7 ~/nagios_monitor.py -H v_HOSTS -c disable

-stop app, splunk
release_runner.pl -invdb_mode -superpod v_SUPERPOD -cluster v_CLUSTER -product mq-broker,sfdc-splunk-forwarder -host v_HOSTS -c stop_server -auto2

- Execute the  update script:
release_runner.pl -forced_host v_HOSTS -c sudo_cmd -m "./remote_transfer/system_update.sh -p" -threads -auto2

- Reboot the host
release_runner.pl -forced_host v_HOSTS -c sudo_cmd -m "reboot" -threads -auto2

- Check the host is online
Exec: ~/check_reconnect.py -H v_HOSTS

-Validate RHEL release version
release_runner.pl -forced_host v_HOSTS -c sudo_cmd -m "./remote_transfer/validate_linux_patchset.py -c current -f ../includes/valid_versions.json -u" -threads -auto2

-start app
release_runner.pl -invdb_mode -superpod v_SUPERPOD -cluster v_CLUSTER -product mq-broker,sfdc-splunk-forwarder -host v_HOSTS -c start_server -auto2

-once you have checked monitoring enable monitoring
Exec: /opt/rh/python27/root/usr/bin/python2.7 ~/nagios_monitor.py -H v_HOSTS -c enable

- Patchset completed comment
Exec: echo "host v_HOSTS systems patching completed"

